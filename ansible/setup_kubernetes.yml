---
- name: Instalar Docker, Kind, kubectl e criar cluster Kubernetes
  hosts: localhost
  connection: local
  become: true

  tasks:
    # ----------------------
    # Instalar dependências
    # ----------------------
    - name: Atualizar o cache do APT
      apt:
        update_cache: true

    - name: Instalar pacotes necessários
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    # ----------------------
    # Instalar Docker
    # ----------------------
    - name: Adicionar chave GPG do Docker
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Adicionar repositório do Docker
      apt_repository:
        repo: >
          deb [arch=amd64] https://download.docker.com/linux/debian
          {{ ansible_distribution_release }} stable
        state: present

    - name: Instalar Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: true

    - name: Adicionar usuário vagrant ao grupo docker
      user:
        name: vagrant
        groups: docker
        append: true

    # ----------------------
    # Instalar Kind
    # ----------------------
    - name: Baixar o Kind
      get_url:
        url: https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
        dest: /usr/local/bin/kind
        mode: '0755'

    # ----------------------
    # Instalar kubectl
    # ----------------------
    - name: Baixar o kubectl
      get_url:
        url: https://dl.k8s.io/release/v1.29.3/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'

    # ----------------------
    # Criar cluster com Kind
    # ----------------------
    - name: Criar diretório de configuração do Kind
      file:
        path: /home/vagrant/kind
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'

    - name: Criar arquivo de configuração do cluster
      copy:
        dest: /home/vagrant/kind/cluster-config.yaml
        content: |
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
            - role: control-plane
            - role: worker
            - role: worker

    - name: Criar o cluster com Kind
      become_user: vagrant
      command: >
        kind create cluster
        --config /home/vagrant/kind/cluster-config.yaml
        --name dev-cluster

    # ----------------------
    # Instalar Argo CD
    # ----------------------
    - name: Criar namespace argocd (se não existir)
      become_user: vagrant
      command: kubectl create namespace argocd
      ignore_errors: true
      environment:
        KUBECONFIG: /home/vagrant/.kube/config
        
    - name: Aplicar manifest do Argo CD
      become_user: vagrant
      command: >
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      args:
        creates: /home/vagrant/.argo_installed
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Esperar todos os pods do Argo CD estarem prontos
      become_user: vagrant
      shell: |
        kubectl wait --for=condition=available --timeout=180s deployment --all -n argocd
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Obter senha do usuário admin do Argo CD
      become_user: vagrant
      shell: |
        kubectl get secret argocd-initial-admin-secret -n argocd \
        -o jsonpath="{.data.password}" | base64 --decode
      register: argo_admin_password
      changed_when: false
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Exibir a senha do Argo CD
      debug:
        msg: "Senha admin do Argo CD: {{ argo_admin_password.stdout }}"
